{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0411\\u041E\\u0413 \\u041A\\u041E\\u041C\\u041F\\u0410\\\\Desktop\\\\M\\\\dev\\\\movies-explorer-frontend\\\\src\\\\components\\\\App\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React from 'react';\nimport { Routes, Route, useNavigate, useLocation } from 'react-router-dom';\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext';\nimport Header from '../Header/Header';\nimport Register from '../Register/Register';\nimport Login from '../Login/Login';\nimport Profile from '../Profile/Profile';\nimport Main from '../Main/Main';\nimport Movies from '../Movies/Movies';\nimport SavedMovies from '../SavedMovies/SavedMovies';\nimport NotFound from '../NotFound/NotFound';\nimport { mainApi } from '../../utils/MainApi';\nimport { moviesApi } from '../../utils/MoviesApi';\nimport { errorBadRequest, errorConflict } from '../../utils/errors';\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [loggedIn, setLoggedIn] = React.useState(JSON.parse(localStorage.getItem('Login')));\n  const [movies, setMovies] = React.useState(JSON.parse(localStorage.getItem('Movies')));\n  const [savedMovies, setSavedMovies] = React.useState([]);\n  const [foundMovies, setFoundMovies] = React.useState(JSON.parse(localStorage.getItem('storageMoviesCards')));\n  const [searchInputValue, setSearchInputValue] = React.useState(JSON.parse(localStorage.getItem('storageMoviesText')));\n  const [searchSavedInputValue, setSearchSavedInputValue] = React.useState('');\n  const [foundSavedMovies, setFoundSavedMovies] = React.useState([]);\n  const [isSearched, setIsSearched] = React.useState(JSON.parse(localStorage.getItem('Searched')));\n  const [isSearchedSaved, setIsSearchedSaved] = React.useState(false);\n  const [errorMessage, setErrorMessage] = React.useState('');\n  const [successMessage, setSuccessMessage] = React.useState('');\n  const [shortMovies, setShortMovies] = React.useState([]);\n  const [shortSavedMovies, setSavedShortMovies] = React.useState([]);\n  const [isToggle, setIsToggle] = React.useState(JSON.parse(localStorage.getItem('Toggle')));\n  const [isSavedToggle, setSavedIsToggle] = React.useState(JSON.parse(localStorage.getItem('SavedToggle')));\n  const [isResult, setIsResult] = React.useState(JSON.parse(localStorage.getItem('Result')));\n  const [isSavedResult, setIsSavedResult] = React.useState(JSON.parse(localStorage.getItem('SavedResult')));\n  const [isPreloader, setIsPreloader] = React.useState(false);\n  const [isUpdate, setIsUpdate] = React.useState(false);\n  const location = useLocation();\n  const isHeaderLocation = ['/', '/profile', '/movies', '/saved-movies'];\n  const navigate = useNavigate();\n  React.useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      mainApi.checkToken(token).then(res => {\n        if (res) {\n          setLoggedIn(true);\n        }\n      }).catch(err => {\n        localStorage.removeItem('token');\n        console.log(`Ошибка: ${err}`);\n      });\n      mainApi.getUserInfo().then(res => {\n        setCurrentUser(res);\n      }).catch(err => {\n        console.error(err);\n      });\n    }\n  }, [loggedIn]);\n  React.useEffect(() => {\n    moviesApi.getMovieCards().then(res => {\n      setMovies(res);\n    }).catch(err => {\n      console.error(err);\n    });\n  }, [loggedIn]);\n  React.useEffect(() => {\n    mainApi.getMovie().then(res => {\n      setSavedMovies(res.reverse());\n    }).catch(err => {\n      console.error(err);\n    });\n  }, [loggedIn]);\n  const handleRegistrate = data => {\n    mainApi.register({\n      name: data.name,\n      password: data.password,\n      email: data.email\n    }).then(() => {\n      handleLogin({\n        password: data.password,\n        email: data.email\n      });\n      setErrorMessage('');\n    }).catch(err => {\n      if (err === errorConflict) {\n        setErrorMessage('Пользователь с таким email уже существует');\n        console.log(errorMessage);\n      } else {\n        setErrorMessage('При регистрации пользователя произошла ошибка');\n      }\n    });\n  };\n  const handleLogin = data => {\n    mainApi.authorize({\n      email: data.email,\n      password: data.password\n    }).then(res => {\n      localStorage.setItem('token', res.token);\n      setLoggedIn(true);\n      navigate('/movies');\n      setErrorMessage('');\n    }).catch(err => {\n      console.log(err);\n      if (err === errorBadRequest) {\n        setErrorMessage('Вы ввели неправильный логин или пароль');\n      } else {\n        setErrorMessage('При входе в аккаунт произошла ошибка');\n      }\n    });\n  };\n  function handleLogOut() {\n    localStorage.removeItem('token');\n    setLoggedIn(false);\n    navigate('/');\n    setFoundMovies([]);\n    setSearchInputValue('');\n    setIsSearched(false);\n    localStorage.removeItem('storageMoviesText');\n    localStorage.removeItem('storageMoviesCards');\n    localStorage.removeItem('storageSavedSearchedMovies', JSON.stringify(foundSavedMovies));\n    localStorage.removeItem('Movies');\n    localStorage.removeItem('Searched');\n    localStorage.removeItem('Result');\n    localStorage.removeItem('SavedResult');\n    localStorage.removeItem('Toggle');\n    localStorage.removeItem('SavedToggle');\n    localStorage.removeItem('Login');\n  }\n  const handleUpdateUser = ({\n    name,\n    email\n  }) => {\n    mainApi.addUserInfo({\n      name,\n      email\n    }).then((res, err) => {\n      if (err === errorConflict) {\n        setErrorMessage('Пользователь с таким email уже существует');\n      } else {\n        setCurrentUser(res);\n        setErrorMessage('');\n        setIsUpdate(true);\n        setSuccessMessage('Данные успешно обновлены');\n        // setTimeout(() => setErrorMessage('Данные успешно обновлены'), 500);\n      }\n    }).catch(() => {\n      setErrorMessage('При обновлении профиля произошла ошибка');\n    });\n  };\n  React.useEffect(() => {\n    localStorage.setItem('storageMoviesText', JSON.stringify(searchInputValue));\n    localStorage.setItem('storageMoviesCards', JSON.stringify(foundMovies));\n    localStorage.setItem('storageSavedSearchedMovies', JSON.stringify(foundSavedMovies));\n    localStorage.setItem('Movies', JSON.stringify(movies));\n    localStorage.setItem('Searched', JSON.stringify(isSearched));\n    localStorage.setItem('Result', JSON.stringify(isResult));\n    localStorage.setItem('SavedResult', JSON.stringify(isSavedResult));\n    localStorage.setItem('Toggle', JSON.stringify(isToggle));\n    localStorage.setItem('SavedToggle', JSON.stringify(isToggle));\n    localStorage.setItem('Login', JSON.stringify(loggedIn));\n  });\n  function searchMovies() {\n    const searchFilter = movies.filter(movie => {\n      return movie.nameRU.toLowerCase().includes(searchInputValue.toLowerCase());\n    });\n    setIsPreloader(true);\n    if (searchFilter.length < 1) {\n      setIsResult(false);\n      setFoundMovies([]);\n      setTimeout(() => setIsPreloader(false), 500);\n    } else {\n      setFoundMovies(searchFilter);\n      setIsResult(true);\n      setTimeout(() => setIsPreloader(false), 500);\n    }\n  }\n  function searchSavedMovies() {\n    const searchSavedFilter = savedMovies.filter(movie => {\n      return movie.nameRU.toLowerCase().includes(searchSavedInputValue.toLowerCase());\n    });\n    if (searchSavedFilter.length < 1) {\n      setIsSavedResult(false);\n      setFoundSavedMovies([]);\n    } else {\n      setFoundSavedMovies(searchSavedFilter);\n      setIsSavedResult(true);\n    }\n  }\n  function handleSearchChange(e) {\n    setSearchInputValue(e.target.value);\n  }\n  function handleSearchSavedChange(e) {\n    setSearchSavedInputValue(e.target.value);\n  }\n  function handleSearchSubmit(e) {\n    e.preventDefault();\n    searchMovies();\n    setIsSearched(true);\n  }\n  function handleSearchSavedSubmit(e) {\n    e.preventDefault();\n    searchSavedMovies();\n    setIsSearchedSaved(true);\n  }\n  function saveMovie(movie) {\n    mainApi.saveMovie({\n      country: movie.country,\n      director: movie.director,\n      duration: movie.duration,\n      year: movie.year,\n      description: movie.description,\n      image: `https://api.nomoreparties.co${movie.image.url}`,\n      trailerLink: movie.trailerLink,\n      thumbnail: `https://api.nomoreparties.co${movie.image.formats.thumbnail.url}`,\n      movieId: movie.id,\n      nameRU: movie.nameRU,\n      nameEN: movie.nameEN\n    }).then(newSavedMovie => {\n      setSavedMovies([newSavedMovie, ...savedMovies]);\n    });\n  }\n  function handleSaveMovieDelete(movie) {\n    mainApi.deleteMovie(movie._id).then(() => {\n      const newSavedMovies = savedMovies.filter(c => c._id !== movie._id);\n      setSavedMovies(newSavedMovies);\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n  React.useEffect(() => {\n    if (isToggle) {\n      const filteredShortMovies = foundMovies.filter(movie => {\n        return movie.duration <= 40;\n      });\n      setShortMovies(filteredShortMovies);\n    }\n  }, [isToggle, foundMovies, setShortMovies]);\n  React.useEffect(() => {\n    if (isSavedToggle) {\n      const filteredShortSavedMovies = savedMovies.filter(movie => {\n        return movie.duration <= 40;\n      });\n      setSavedShortMovies(filteredShortSavedMovies);\n    }\n  }, [isSavedToggle, savedMovies, setSavedShortMovies]);\n  function handleShortMoviesChange() {\n    setIsToggle(!isToggle);\n  }\n  function handleShortSavedMoviesChange() {\n    setSavedIsToggle(!isSavedToggle);\n  }\n  console.log(shortSavedMovies);\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page\",\n        children: [isHeaderLocation.includes(location.pathname) ? /*#__PURE__*/_jsxDEV(Header, {\n          loggedIn: loggedIn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 13\n        }, this) : '', /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/signup\",\n            element: /*#__PURE__*/_jsxDEV(Register, {\n              handleRegistrate: handleRegistrate,\n              errorMessage: errorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/signin\",\n            element: /*#__PURE__*/_jsxDEV(Login, {\n              handleLogin: handleLogin,\n              errorMessage: errorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/profile\",\n            element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n              element: Profile,\n              onSignOut: handleLogOut,\n              onUpdateUser: handleUpdateUser,\n              errorMessage: errorMessage,\n              loggedIn: loggedIn,\n              successMessage: successMessage,\n              isUpdate: isUpdate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/movies\",\n            element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n              element: Movies,\n              movies: isToggle ? shortMovies : foundMovies,\n              handleSearchSubmit: handleSearchSubmit,\n              searchInputValue: searchInputValue,\n              onSearchChange: handleSearchChange,\n              onMovieCardSave: saveMovie,\n              savedMovies: savedMovies,\n              isPreloader: isPreloader,\n              isToggle: isToggle,\n              handleShortMoviesChange: handleShortMoviesChange,\n              isResult: isResult,\n              loggedIn: loggedIn,\n              isSearched: isSearched,\n              onMovieCardDelete: handleSaveMovieDelete\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/saved-movies\",\n            element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n              element: SavedMovies,\n              movies: isSearchedSaved ? foundSavedMovies : isSavedToggle ? shortSavedMovies : savedMovies,\n              onMovieCardDelete: handleSaveMovieDelete,\n              savedMovies: savedMovies,\n              handleSearchSubmit: handleSearchSavedSubmit,\n              searchInputValue: searchSavedInputValue,\n              onSearchChange: handleSearchSavedChange,\n              foundMovies: foundSavedMovies,\n              loggedIn: loggedIn,\n              isSearched: isSearchedSaved,\n              isResult: isSavedResult,\n              isToggle: isSavedToggle,\n              handleShortMoviesChange: handleShortSavedMoviesChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"*\",\n            element: /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 318,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"qT2hcPXRkhD3+DoqnsglKb/GpPM=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Routes","Route","useNavigate","useLocation","CurrentUserContext","Header","Register","Login","Profile","Main","Movies","SavedMovies","NotFound","mainApi","moviesApi","errorBadRequest","errorConflict","ProtectedRoute","jsxDEV","_jsxDEV","App","_s","currentUser","setCurrentUser","useState","loggedIn","setLoggedIn","JSON","parse","localStorage","getItem","movies","setMovies","savedMovies","setSavedMovies","foundMovies","setFoundMovies","searchInputValue","setSearchInputValue","searchSavedInputValue","setSearchSavedInputValue","foundSavedMovies","setFoundSavedMovies","isSearched","setIsSearched","isSearchedSaved","setIsSearchedSaved","errorMessage","setErrorMessage","successMessage","setSuccessMessage","shortMovies","setShortMovies","shortSavedMovies","setSavedShortMovies","isToggle","setIsToggle","isSavedToggle","setSavedIsToggle","isResult","setIsResult","isSavedResult","setIsSavedResult","isPreloader","setIsPreloader","isUpdate","setIsUpdate","location","isHeaderLocation","navigate","useEffect","token","checkToken","then","res","catch","err","removeItem","console","log","getUserInfo","error","getMovieCards","getMovie","reverse","handleRegistrate","data","register","name","password","email","handleLogin","authorize","setItem","handleLogOut","stringify","handleUpdateUser","addUserInfo","searchMovies","searchFilter","filter","movie","nameRU","toLowerCase","includes","length","setTimeout","searchSavedMovies","searchSavedFilter","handleSearchChange","e","target","value","handleSearchSavedChange","handleSearchSubmit","preventDefault","handleSearchSavedSubmit","saveMovie","country","director","duration","year","description","image","url","trailerLink","thumbnail","formats","movieId","id","nameEN","newSavedMovie","handleSaveMovieDelete","deleteMovie","_id","newSavedMovies","c","filteredShortMovies","filteredShortSavedMovies","handleShortMoviesChange","handleShortSavedMoviesChange","Provider","children","className","pathname","fileName","_jsxFileName","lineNumber","columnNumber","path","element","onSignOut","onUpdateUser","onSearchChange","onMovieCardSave","onMovieCardDelete","_c","$RefreshReg$"],"sources":["C:/Users/БОГ КОМПА/Desktop/M/dev/movies-explorer-frontend/src/components/App/App.js"],"sourcesContent":["import './App.css';\nimport React from 'react';\nimport { Routes, Route, useNavigate, useLocation } from 'react-router-dom';\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext';\nimport Header from '../Header/Header';\nimport Register from '../Register/Register';\nimport Login from '../Login/Login';\nimport Profile from '../Profile/Profile';\nimport Main from '../Main/Main';\nimport Movies from '../Movies/Movies';\nimport SavedMovies from '../SavedMovies/SavedMovies';\nimport NotFound from '../NotFound/NotFound';\nimport { mainApi } from '../../utils/MainApi';\nimport { moviesApi } from '../../utils/MoviesApi';\nimport { errorBadRequest, errorConflict } from '../../utils/errors';\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute';\n\nfunction App() {\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [loggedIn, setLoggedIn] = React.useState(\n    JSON.parse(localStorage.getItem('Login'))\n  );\n  const [movies, setMovies] = React.useState(\n    JSON.parse(localStorage.getItem('Movies'))\n  );\n  const [savedMovies, setSavedMovies] = React.useState([]);\n  const [foundMovies, setFoundMovies] = React.useState(\n    JSON.parse(localStorage.getItem('storageMoviesCards'))\n  );\n  const [searchInputValue, setSearchInputValue] = React.useState(\n    JSON.parse(localStorage.getItem('storageMoviesText'))\n  );\n  const [searchSavedInputValue, setSearchSavedInputValue] = React.useState('');\n  const [foundSavedMovies, setFoundSavedMovies] = React.useState([]);\n  const [isSearched, setIsSearched] = React.useState(\n    JSON.parse(localStorage.getItem('Searched'))\n  );\n  const [isSearchedSaved, setIsSearchedSaved] = React.useState(false);\n  const [errorMessage, setErrorMessage] = React.useState('');\n  const [successMessage, setSuccessMessage] = React.useState('');\n  const [shortMovies, setShortMovies] = React.useState([]);\n  const [shortSavedMovies, setSavedShortMovies] = React.useState([]);\n  const [isToggle, setIsToggle] = React.useState(\n    JSON.parse(localStorage.getItem('Toggle'))\n  );\n  const [isSavedToggle, setSavedIsToggle] = React.useState(\n    JSON.parse(localStorage.getItem('SavedToggle'))\n  );\n  const [isResult, setIsResult] = React.useState(\n    JSON.parse(localStorage.getItem('Result'))\n  );\n  const [isSavedResult, setIsSavedResult] = React.useState(\n    JSON.parse(localStorage.getItem('SavedResult'))\n  );\n  const [isPreloader, setIsPreloader] = React.useState(false);\n  const [isUpdate, setIsUpdate] = React.useState(false);\n\n  const location = useLocation();\n  const isHeaderLocation = ['/', '/profile', '/movies', '/saved-movies'];\n\n  const navigate = useNavigate();\n\n  React.useEffect(() => {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      mainApi\n        .checkToken(token)\n        .then((res) => {\n          if (res) {\n            setLoggedIn(true);\n          }\n        })\n        .catch((err) => {\n          localStorage.removeItem('token');\n          console.log(`Ошибка: ${err}`);\n        });\n\n      mainApi\n        .getUserInfo()\n        .then((res) => {\n          setCurrentUser(res);\n        })\n        .catch((err) => {\n          console.error(err);\n        });\n    }\n  }, [loggedIn]);\n\n  React.useEffect(() => {\n    moviesApi\n      .getMovieCards()\n      .then((res) => {\n        setMovies(res);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }, [loggedIn]);\n\n  React.useEffect(() => {\n    mainApi\n      .getMovie()\n      .then((res) => {\n        setSavedMovies(res.reverse());\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }, [loggedIn]);\n\n  const handleRegistrate = (data) => {\n    mainApi\n      .register({ name: data.name, password: data.password, email: data.email })\n      .then(() => {\n        handleLogin({ password: data.password, email: data.email });\n        setErrorMessage('');\n      })\n      .catch((err) => {\n        if (err === errorConflict) {\n          setErrorMessage('Пользователь с таким email уже существует');\n          console.log(errorMessage);\n        } else {\n          setErrorMessage('При регистрации пользователя произошла ошибка');\n        }\n      });\n  };\n\n  const handleLogin = (data) => {\n    mainApi\n      .authorize({ email: data.email, password: data.password })\n      .then((res) => {\n        localStorage.setItem('token', res.token);\n        setLoggedIn(true);\n        navigate('/movies');\n        setErrorMessage('');\n      })\n      .catch((err) => {\n        console.log(err);\n        if (err === errorBadRequest) {\n          setErrorMessage('Вы ввели неправильный логин или пароль');\n        } else {\n          setErrorMessage('При входе в аккаунт произошла ошибка');\n        }\n      });\n  };\n\n  function handleLogOut() {\n    localStorage.removeItem('token');\n    setLoggedIn(false);\n    navigate('/');\n    setFoundMovies([]);\n    setSearchInputValue('');\n    setIsSearched(false);\n    localStorage.removeItem('storageMoviesText');\n    localStorage.removeItem('storageMoviesCards');\n    localStorage.removeItem(\n      'storageSavedSearchedMovies',\n      JSON.stringify(foundSavedMovies)\n    );\n    localStorage.removeItem('Movies');\n    localStorage.removeItem('Searched');\n    localStorage.removeItem('Result');\n    localStorage.removeItem('SavedResult');\n    localStorage.removeItem('Toggle');\n    localStorage.removeItem('SavedToggle');\n    localStorage.removeItem('Login');\n  }\n\n  const handleUpdateUser = ({ name, email }) => {\n    mainApi\n      .addUserInfo({ name, email })\n      .then((res, err) => {\n        if (err === errorConflict) {\n          setErrorMessage('Пользователь с таким email уже существует');\n        } else {\n          setCurrentUser(res);\n          setErrorMessage('');\n          setIsUpdate(true)\n          setSuccessMessage('Данные успешно обновлены')\n          // setTimeout(() => setErrorMessage('Данные успешно обновлены'), 500);\n        }\n      })\n      .catch(() => {\n        setErrorMessage('При обновлении профиля произошла ошибка');\n      });\n  };\n\n  React.useEffect(() => {\n    localStorage.setItem('storageMoviesText', JSON.stringify(searchInputValue));\n    localStorage.setItem('storageMoviesCards', JSON.stringify(foundMovies));\n    localStorage.setItem(\n      'storageSavedSearchedMovies',\n      JSON.stringify(foundSavedMovies)\n    );\n    localStorage.setItem('Movies', JSON.stringify(movies));\n    localStorage.setItem('Searched', JSON.stringify(isSearched));\n    localStorage.setItem('Result', JSON.stringify(isResult));\n    localStorage.setItem('SavedResult', JSON.stringify(isSavedResult));\n    localStorage.setItem('Toggle', JSON.stringify(isToggle));\n    localStorage.setItem('SavedToggle', JSON.stringify(isToggle));\n    localStorage.setItem('Login', JSON.stringify(loggedIn));\n  });\n\n  function searchMovies() {\n    const searchFilter = movies.filter((movie) => {\n      return movie.nameRU\n        .toLowerCase()\n        .includes(searchInputValue.toLowerCase());\n    });\n    setIsPreloader(true);\n    if (searchFilter.length < 1) {\n      setIsResult(false);\n      setFoundMovies([]);\n      setTimeout(() => setIsPreloader(false), 500);\n    } else {\n      setFoundMovies(searchFilter);\n      setIsResult(true);\n      setTimeout(() => setIsPreloader(false), 500);\n    }\n  }\n\n  function searchSavedMovies() {\n    const searchSavedFilter = savedMovies.filter((movie) => {\n      return movie.nameRU\n        .toLowerCase()\n        .includes(searchSavedInputValue.toLowerCase());\n    });\n    if (searchSavedFilter.length < 1) {\n      setIsSavedResult(false);\n      setFoundSavedMovies([]);\n    } else {\n      setFoundSavedMovies(searchSavedFilter);\n      setIsSavedResult(true);\n    }\n  }\n\n  function handleSearchChange(e) {\n    setSearchInputValue(e.target.value);\n  }\n\n  function handleSearchSavedChange(e) {\n    setSearchSavedInputValue(e.target.value);\n  }\n\n  function handleSearchSubmit(e) {\n    e.preventDefault();\n    searchMovies();\n    setIsSearched(true);\n  }\n\n  function handleSearchSavedSubmit(e) {\n    e.preventDefault();\n    searchSavedMovies();\n    setIsSearchedSaved(true);\n  }\n\n  function saveMovie(movie) {\n    mainApi\n      .saveMovie({\n        country: movie.country,\n        director: movie.director,\n        duration: movie.duration,\n        year: movie.year,\n        description: movie.description,\n        image: `https://api.nomoreparties.co${movie.image.url}`,\n        trailerLink: movie.trailerLink,\n        thumbnail: `https://api.nomoreparties.co${movie.image.formats.thumbnail.url}`,\n        movieId: movie.id,\n        nameRU: movie.nameRU,\n        nameEN: movie.nameEN,\n      })\n      .then((newSavedMovie) => {\n        setSavedMovies([newSavedMovie, ...savedMovies]);\n      });\n  }\n\n  function handleSaveMovieDelete(movie) {\n    mainApi\n      .deleteMovie(movie._id)\n      .then(() => {\n        const newSavedMovies = savedMovies.filter((c) => c._id !== movie._id);\n        setSavedMovies(newSavedMovies);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }\n\n  React.useEffect(() => {\n    if (isToggle) {\n      const filteredShortMovies = foundMovies.filter((movie) => {\n        return movie.duration <= 40;\n      });\n      setShortMovies(filteredShortMovies);\n    }\n  }, [isToggle, foundMovies, setShortMovies]);\n\n  React.useEffect(() => {\n    if (isSavedToggle) {\n      const filteredShortSavedMovies = savedMovies.filter((movie) => {\n        return movie.duration <= 40;\n      });\n      setSavedShortMovies(filteredShortSavedMovies);\n    }\n  }, [isSavedToggle, savedMovies, setSavedShortMovies]);\n\n  function handleShortMoviesChange() {\n    setIsToggle(!isToggle);\n  }\n\n  function handleShortSavedMoviesChange() {\n    setSavedIsToggle(!isSavedToggle);\n  }\n\n  console.log(shortSavedMovies);\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className='body'>\n        <div className='page'>\n          {isHeaderLocation.includes(location.pathname) ? (\n            <Header loggedIn={loggedIn} />\n          ) : (\n            ''\n          )}\n          <Routes>\n            <Route\n              path='/signup'\n              element={\n                <Register\n                  handleRegistrate={handleRegistrate}\n                  errorMessage={errorMessage}\n                />\n              }\n            />\n            <Route\n              path='/signin'\n              element={\n                <Login handleLogin={handleLogin} errorMessage={errorMessage} />\n              }\n            />\n            <Route path='/' element={<Main />} />\n            <Route\n              path='/profile'\n              element={\n                <ProtectedRoute\n                  element={Profile}\n                  onSignOut={handleLogOut}\n                  onUpdateUser={handleUpdateUser}\n                  errorMessage={errorMessage}\n                  loggedIn={loggedIn}\n                  successMessage={successMessage}\n                  isUpdate={isUpdate}\n                />\n              }\n            />\n            <Route\n              path='/movies'\n              element={\n                <ProtectedRoute\n                  element={Movies}\n                  movies={isToggle ? shortMovies : foundMovies}\n                  handleSearchSubmit={handleSearchSubmit}\n                  searchInputValue={searchInputValue}\n                  onSearchChange={handleSearchChange}\n                  onMovieCardSave={saveMovie}\n                  savedMovies={savedMovies}\n                  isPreloader={isPreloader}\n                  isToggle={isToggle}\n                  handleShortMoviesChange={handleShortMoviesChange}\n                  isResult={isResult}\n                  loggedIn={loggedIn}\n                  isSearched={isSearched}\n                  onMovieCardDelete={handleSaveMovieDelete}\n                />\n              }\n            />\n            <Route\n              path='/saved-movies'\n              element={\n                <ProtectedRoute\n                  element={SavedMovies}\n                  movies={\n                    isSearchedSaved\n                      ? foundSavedMovies\n                      : isSavedToggle\n                      ? shortSavedMovies\n                      : savedMovies\n                  }\n                  onMovieCardDelete={handleSaveMovieDelete}\n                  savedMovies={savedMovies}\n                  handleSearchSubmit={handleSearchSavedSubmit}\n                  searchInputValue={searchSavedInputValue}\n                  onSearchChange={handleSearchSavedChange}\n                  foundMovies={foundSavedMovies}\n                  loggedIn={loggedIn}\n                  isSearched={isSearchedSaved}\n                  isResult={isSavedResult}\n                  isToggle={isSavedToggle}\n                  handleShortMoviesChange={handleShortSavedMoviesChange}\n                />\n              }\n            />\n            <Route path='*' element={<NotFound />} />\n          </Routes>\n        </div>\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,KAAK,EAAEC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC1E,SAASC,kBAAkB,QAAQ,mCAAmC;AACtE,OAAOC,MAAM,MAAM,kBAAkB;AACrC,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAOC,KAAK,MAAM,gBAAgB;AAClC,OAAOC,OAAO,MAAM,oBAAoB;AACxC,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,MAAM,MAAM,kBAAkB;AACrC,OAAOC,WAAW,MAAM,4BAA4B;AACpD,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,SAASC,OAAO,QAAQ,qBAAqB;AAC7C,SAASC,SAAS,QAAQ,uBAAuB;AACjD,SAASC,eAAe,EAAEC,aAAa,QAAQ,oBAAoB;AACnE,OAAOC,cAAc,MAAM,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGxB,KAAK,CAACyB,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAG3B,KAAK,CAACyB,QAAQ,CAC5CG,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC1C,CAAC;EACD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGjC,KAAK,CAACyB,QAAQ,CACxCG,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAC3C,CAAC;EACD,MAAM,CAACG,WAAW,EAAEC,cAAc,CAAC,GAAGnC,KAAK,CAACyB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGrC,KAAK,CAACyB,QAAQ,CAClDG,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,oBAAoB,CAAC,CACvD,CAAC;EACD,MAAM,CAACO,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGvC,KAAK,CAACyB,QAAQ,CAC5DG,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,mBAAmB,CAAC,CACtD,CAAC;EACD,MAAM,CAACS,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGzC,KAAK,CAACyB,QAAQ,CAAC,EAAE,CAAC;EAC5E,MAAM,CAACiB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG3C,KAAK,CAACyB,QAAQ,CAAC,EAAE,CAAC;EAClE,MAAM,CAACmB,UAAU,EAAEC,aAAa,CAAC,GAAG7C,KAAK,CAACyB,QAAQ,CAChDG,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAC7C,CAAC;EACD,MAAM,CAACe,eAAe,EAAEC,kBAAkB,CAAC,GAAG/C,KAAK,CAACyB,QAAQ,CAAC,KAAK,CAAC;EACnE,MAAM,CAACuB,YAAY,EAAEC,eAAe,CAAC,GAAGjD,KAAK,CAACyB,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACyB,cAAc,EAAEC,iBAAiB,CAAC,GAAGnD,KAAK,CAACyB,QAAQ,CAAC,EAAE,CAAC;EAC9D,MAAM,CAAC2B,WAAW,EAAEC,cAAc,CAAC,GAAGrD,KAAK,CAACyB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAAC6B,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGvD,KAAK,CAACyB,QAAQ,CAAC,EAAE,CAAC;EAClE,MAAM,CAAC+B,QAAQ,EAAEC,WAAW,CAAC,GAAGzD,KAAK,CAACyB,QAAQ,CAC5CG,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAC3C,CAAC;EACD,MAAM,CAAC2B,aAAa,EAAEC,gBAAgB,CAAC,GAAG3D,KAAK,CAACyB,QAAQ,CACtDG,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CAChD,CAAC;EACD,MAAM,CAAC6B,QAAQ,EAAEC,WAAW,CAAC,GAAG7D,KAAK,CAACyB,QAAQ,CAC5CG,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAC3C,CAAC;EACD,MAAM,CAAC+B,aAAa,EAAEC,gBAAgB,CAAC,GAAG/D,KAAK,CAACyB,QAAQ,CACtDG,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CAChD,CAAC;EACD,MAAM,CAACiC,WAAW,EAAEC,cAAc,CAAC,GAAGjE,KAAK,CAACyB,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACyC,QAAQ,EAAEC,WAAW,CAAC,GAAGnE,KAAK,CAACyB,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAM2C,QAAQ,GAAGhE,WAAW,CAAC,CAAC;EAC9B,MAAMiE,gBAAgB,GAAG,CAAC,GAAG,EAAE,UAAU,EAAE,SAAS,EAAE,eAAe,CAAC;EAEtE,MAAMC,QAAQ,GAAGnE,WAAW,CAAC,CAAC;EAE9BH,KAAK,CAACuE,SAAS,CAAC,MAAM;IACpB,MAAMC,KAAK,GAAG1C,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAE3C,IAAIyC,KAAK,EAAE;MACT1D,OAAO,CACJ2D,UAAU,CAACD,KAAK,CAAC,CACjBE,IAAI,CAAEC,GAAG,IAAK;QACb,IAAIA,GAAG,EAAE;UACPhD,WAAW,CAAC,IAAI,CAAC;QACnB;MACF,CAAC,CAAC,CACDiD,KAAK,CAAEC,GAAG,IAAK;QACd/C,YAAY,CAACgD,UAAU,CAAC,OAAO,CAAC;QAChCC,OAAO,CAACC,GAAG,CAAE,WAAUH,GAAI,EAAC,CAAC;MAC/B,CAAC,CAAC;MAEJ/D,OAAO,CACJmE,WAAW,CAAC,CAAC,CACbP,IAAI,CAAEC,GAAG,IAAK;QACbnD,cAAc,CAACmD,GAAG,CAAC;MACrB,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAK;QACdE,OAAO,CAACG,KAAK,CAACL,GAAG,CAAC;MACpB,CAAC,CAAC;IACN;EACF,CAAC,EAAE,CAACnD,QAAQ,CAAC,CAAC;EAEd1B,KAAK,CAACuE,SAAS,CAAC,MAAM;IACpBxD,SAAS,CACNoE,aAAa,CAAC,CAAC,CACfT,IAAI,CAAEC,GAAG,IAAK;MACb1C,SAAS,CAAC0C,GAAG,CAAC;IAChB,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAK;MACdE,OAAO,CAACG,KAAK,CAACL,GAAG,CAAC;IACpB,CAAC,CAAC;EACN,CAAC,EAAE,CAACnD,QAAQ,CAAC,CAAC;EAEd1B,KAAK,CAACuE,SAAS,CAAC,MAAM;IACpBzD,OAAO,CACJsE,QAAQ,CAAC,CAAC,CACVV,IAAI,CAAEC,GAAG,IAAK;MACbxC,cAAc,CAACwC,GAAG,CAACU,OAAO,CAAC,CAAC,CAAC;IAC/B,CAAC,CAAC,CACDT,KAAK,CAAEC,GAAG,IAAK;MACdE,OAAO,CAACG,KAAK,CAACL,GAAG,CAAC;IACpB,CAAC,CAAC;EACN,CAAC,EAAE,CAACnD,QAAQ,CAAC,CAAC;EAEd,MAAM4D,gBAAgB,GAAIC,IAAI,IAAK;IACjCzE,OAAO,CACJ0E,QAAQ,CAAC;MAAEC,IAAI,EAAEF,IAAI,CAACE,IAAI;MAAEC,QAAQ,EAAEH,IAAI,CAACG,QAAQ;MAAEC,KAAK,EAAEJ,IAAI,CAACI;IAAM,CAAC,CAAC,CACzEjB,IAAI,CAAC,MAAM;MACVkB,WAAW,CAAC;QAAEF,QAAQ,EAAEH,IAAI,CAACG,QAAQ;QAAEC,KAAK,EAAEJ,IAAI,CAACI;MAAM,CAAC,CAAC;MAC3D1C,eAAe,CAAC,EAAE,CAAC;IACrB,CAAC,CAAC,CACD2B,KAAK,CAAEC,GAAG,IAAK;MACd,IAAIA,GAAG,KAAK5D,aAAa,EAAE;QACzBgC,eAAe,CAAC,2CAA2C,CAAC;QAC5D8B,OAAO,CAACC,GAAG,CAAChC,YAAY,CAAC;MAC3B,CAAC,MAAM;QACLC,eAAe,CAAC,+CAA+C,CAAC;MAClE;IACF,CAAC,CAAC;EACN,CAAC;EAED,MAAM2C,WAAW,GAAIL,IAAI,IAAK;IAC5BzE,OAAO,CACJ+E,SAAS,CAAC;MAAEF,KAAK,EAAEJ,IAAI,CAACI,KAAK;MAAED,QAAQ,EAAEH,IAAI,CAACG;IAAS,CAAC,CAAC,CACzDhB,IAAI,CAAEC,GAAG,IAAK;MACb7C,YAAY,CAACgE,OAAO,CAAC,OAAO,EAAEnB,GAAG,CAACH,KAAK,CAAC;MACxC7C,WAAW,CAAC,IAAI,CAAC;MACjB2C,QAAQ,CAAC,SAAS,CAAC;MACnBrB,eAAe,CAAC,EAAE,CAAC;IACrB,CAAC,CAAC,CACD2B,KAAK,CAAEC,GAAG,IAAK;MACdE,OAAO,CAACC,GAAG,CAACH,GAAG,CAAC;MAChB,IAAIA,GAAG,KAAK7D,eAAe,EAAE;QAC3BiC,eAAe,CAAC,wCAAwC,CAAC;MAC3D,CAAC,MAAM;QACLA,eAAe,CAAC,sCAAsC,CAAC;MACzD;IACF,CAAC,CAAC;EACN,CAAC;EAED,SAAS8C,YAAYA,CAAA,EAAG;IACtBjE,YAAY,CAACgD,UAAU,CAAC,OAAO,CAAC;IAChCnD,WAAW,CAAC,KAAK,CAAC;IAClB2C,QAAQ,CAAC,GAAG,CAAC;IACbjC,cAAc,CAAC,EAAE,CAAC;IAClBE,mBAAmB,CAAC,EAAE,CAAC;IACvBM,aAAa,CAAC,KAAK,CAAC;IACpBf,YAAY,CAACgD,UAAU,CAAC,mBAAmB,CAAC;IAC5ChD,YAAY,CAACgD,UAAU,CAAC,oBAAoB,CAAC;IAC7ChD,YAAY,CAACgD,UAAU,CACrB,4BAA4B,EAC5BlD,IAAI,CAACoE,SAAS,CAACtD,gBAAgB,CACjC,CAAC;IACDZ,YAAY,CAACgD,UAAU,CAAC,QAAQ,CAAC;IACjChD,YAAY,CAACgD,UAAU,CAAC,UAAU,CAAC;IACnChD,YAAY,CAACgD,UAAU,CAAC,QAAQ,CAAC;IACjChD,YAAY,CAACgD,UAAU,CAAC,aAAa,CAAC;IACtChD,YAAY,CAACgD,UAAU,CAAC,QAAQ,CAAC;IACjChD,YAAY,CAACgD,UAAU,CAAC,aAAa,CAAC;IACtChD,YAAY,CAACgD,UAAU,CAAC,OAAO,CAAC;EAClC;EAEA,MAAMmB,gBAAgB,GAAGA,CAAC;IAAER,IAAI;IAAEE;EAAM,CAAC,KAAK;IAC5C7E,OAAO,CACJoF,WAAW,CAAC;MAAET,IAAI;MAAEE;IAAM,CAAC,CAAC,CAC5BjB,IAAI,CAAC,CAACC,GAAG,EAAEE,GAAG,KAAK;MAClB,IAAIA,GAAG,KAAK5D,aAAa,EAAE;QACzBgC,eAAe,CAAC,2CAA2C,CAAC;MAC9D,CAAC,MAAM;QACLzB,cAAc,CAACmD,GAAG,CAAC;QACnB1B,eAAe,CAAC,EAAE,CAAC;QACnBkB,WAAW,CAAC,IAAI,CAAC;QACjBhB,iBAAiB,CAAC,0BAA0B,CAAC;QAC7C;MACF;IACF,CAAC,CAAC,CACDyB,KAAK,CAAC,MAAM;MACX3B,eAAe,CAAC,yCAAyC,CAAC;IAC5D,CAAC,CAAC;EACN,CAAC;EAEDjD,KAAK,CAACuE,SAAS,CAAC,MAAM;IACpBzC,YAAY,CAACgE,OAAO,CAAC,mBAAmB,EAAElE,IAAI,CAACoE,SAAS,CAAC1D,gBAAgB,CAAC,CAAC;IAC3ER,YAAY,CAACgE,OAAO,CAAC,oBAAoB,EAAElE,IAAI,CAACoE,SAAS,CAAC5D,WAAW,CAAC,CAAC;IACvEN,YAAY,CAACgE,OAAO,CAClB,4BAA4B,EAC5BlE,IAAI,CAACoE,SAAS,CAACtD,gBAAgB,CACjC,CAAC;IACDZ,YAAY,CAACgE,OAAO,CAAC,QAAQ,EAAElE,IAAI,CAACoE,SAAS,CAAChE,MAAM,CAAC,CAAC;IACtDF,YAAY,CAACgE,OAAO,CAAC,UAAU,EAAElE,IAAI,CAACoE,SAAS,CAACpD,UAAU,CAAC,CAAC;IAC5Dd,YAAY,CAACgE,OAAO,CAAC,QAAQ,EAAElE,IAAI,CAACoE,SAAS,CAACpC,QAAQ,CAAC,CAAC;IACxD9B,YAAY,CAACgE,OAAO,CAAC,aAAa,EAAElE,IAAI,CAACoE,SAAS,CAAClC,aAAa,CAAC,CAAC;IAClEhC,YAAY,CAACgE,OAAO,CAAC,QAAQ,EAAElE,IAAI,CAACoE,SAAS,CAACxC,QAAQ,CAAC,CAAC;IACxD1B,YAAY,CAACgE,OAAO,CAAC,aAAa,EAAElE,IAAI,CAACoE,SAAS,CAACxC,QAAQ,CAAC,CAAC;IAC7D1B,YAAY,CAACgE,OAAO,CAAC,OAAO,EAAElE,IAAI,CAACoE,SAAS,CAACtE,QAAQ,CAAC,CAAC;EACzD,CAAC,CAAC;EAEF,SAASyE,YAAYA,CAAA,EAAG;IACtB,MAAMC,YAAY,GAAGpE,MAAM,CAACqE,MAAM,CAAEC,KAAK,IAAK;MAC5C,OAAOA,KAAK,CAACC,MAAM,CAChBC,WAAW,CAAC,CAAC,CACbC,QAAQ,CAACnE,gBAAgB,CAACkE,WAAW,CAAC,CAAC,CAAC;IAC7C,CAAC,CAAC;IACFvC,cAAc,CAAC,IAAI,CAAC;IACpB,IAAImC,YAAY,CAACM,MAAM,GAAG,CAAC,EAAE;MAC3B7C,WAAW,CAAC,KAAK,CAAC;MAClBxB,cAAc,CAAC,EAAE,CAAC;MAClBsE,UAAU,CAAC,MAAM1C,cAAc,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC;IAC9C,CAAC,MAAM;MACL5B,cAAc,CAAC+D,YAAY,CAAC;MAC5BvC,WAAW,CAAC,IAAI,CAAC;MACjB8C,UAAU,CAAC,MAAM1C,cAAc,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC;IAC9C;EACF;EAEA,SAAS2C,iBAAiBA,CAAA,EAAG;IAC3B,MAAMC,iBAAiB,GAAG3E,WAAW,CAACmE,MAAM,CAAEC,KAAK,IAAK;MACtD,OAAOA,KAAK,CAACC,MAAM,CAChBC,WAAW,CAAC,CAAC,CACbC,QAAQ,CAACjE,qBAAqB,CAACgE,WAAW,CAAC,CAAC,CAAC;IAClD,CAAC,CAAC;IACF,IAAIK,iBAAiB,CAACH,MAAM,GAAG,CAAC,EAAE;MAChC3C,gBAAgB,CAAC,KAAK,CAAC;MACvBpB,mBAAmB,CAAC,EAAE,CAAC;IACzB,CAAC,MAAM;MACLA,mBAAmB,CAACkE,iBAAiB,CAAC;MACtC9C,gBAAgB,CAAC,IAAI,CAAC;IACxB;EACF;EAEA,SAAS+C,kBAAkBA,CAACC,CAAC,EAAE;IAC7BxE,mBAAmB,CAACwE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACrC;EAEA,SAASC,uBAAuBA,CAACH,CAAC,EAAE;IAClCtE,wBAAwB,CAACsE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC1C;EAEA,SAASE,kBAAkBA,CAACJ,CAAC,EAAE;IAC7BA,CAAC,CAACK,cAAc,CAAC,CAAC;IAClBjB,YAAY,CAAC,CAAC;IACdtD,aAAa,CAAC,IAAI,CAAC;EACrB;EAEA,SAASwE,uBAAuBA,CAACN,CAAC,EAAE;IAClCA,CAAC,CAACK,cAAc,CAAC,CAAC;IAClBR,iBAAiB,CAAC,CAAC;IACnB7D,kBAAkB,CAAC,IAAI,CAAC;EAC1B;EAEA,SAASuE,SAASA,CAAChB,KAAK,EAAE;IACxBxF,OAAO,CACJwG,SAAS,CAAC;MACTC,OAAO,EAAEjB,KAAK,CAACiB,OAAO;MACtBC,QAAQ,EAAElB,KAAK,CAACkB,QAAQ;MACxBC,QAAQ,EAAEnB,KAAK,CAACmB,QAAQ;MACxBC,IAAI,EAAEpB,KAAK,CAACoB,IAAI;MAChBC,WAAW,EAAErB,KAAK,CAACqB,WAAW;MAC9BC,KAAK,EAAG,+BAA8BtB,KAAK,CAACsB,KAAK,CAACC,GAAI,EAAC;MACvDC,WAAW,EAAExB,KAAK,CAACwB,WAAW;MAC9BC,SAAS,EAAG,+BAA8BzB,KAAK,CAACsB,KAAK,CAACI,OAAO,CAACD,SAAS,CAACF,GAAI,EAAC;MAC7EI,OAAO,EAAE3B,KAAK,CAAC4B,EAAE;MACjB3B,MAAM,EAAED,KAAK,CAACC,MAAM;MACpB4B,MAAM,EAAE7B,KAAK,CAAC6B;IAChB,CAAC,CAAC,CACDzD,IAAI,CAAE0D,aAAa,IAAK;MACvBjG,cAAc,CAAC,CAACiG,aAAa,EAAE,GAAGlG,WAAW,CAAC,CAAC;IACjD,CAAC,CAAC;EACN;EAEA,SAASmG,qBAAqBA,CAAC/B,KAAK,EAAE;IACpCxF,OAAO,CACJwH,WAAW,CAAChC,KAAK,CAACiC,GAAG,CAAC,CACtB7D,IAAI,CAAC,MAAM;MACV,MAAM8D,cAAc,GAAGtG,WAAW,CAACmE,MAAM,CAAEoC,CAAC,IAAKA,CAAC,CAACF,GAAG,KAAKjC,KAAK,CAACiC,GAAG,CAAC;MACrEpG,cAAc,CAACqG,cAAc,CAAC;IAChC,CAAC,CAAC,CACD5D,KAAK,CAAEC,GAAG,IAAK;MACdE,OAAO,CAACG,KAAK,CAACL,GAAG,CAAC;IACpB,CAAC,CAAC;EACN;EAEA7E,KAAK,CAACuE,SAAS,CAAC,MAAM;IACpB,IAAIf,QAAQ,EAAE;MACZ,MAAMkF,mBAAmB,GAAGtG,WAAW,CAACiE,MAAM,CAAEC,KAAK,IAAK;QACxD,OAAOA,KAAK,CAACmB,QAAQ,IAAI,EAAE;MAC7B,CAAC,CAAC;MACFpE,cAAc,CAACqF,mBAAmB,CAAC;IACrC;EACF,CAAC,EAAE,CAAClF,QAAQ,EAAEpB,WAAW,EAAEiB,cAAc,CAAC,CAAC;EAE3CrD,KAAK,CAACuE,SAAS,CAAC,MAAM;IACpB,IAAIb,aAAa,EAAE;MACjB,MAAMiF,wBAAwB,GAAGzG,WAAW,CAACmE,MAAM,CAAEC,KAAK,IAAK;QAC7D,OAAOA,KAAK,CAACmB,QAAQ,IAAI,EAAE;MAC7B,CAAC,CAAC;MACFlE,mBAAmB,CAACoF,wBAAwB,CAAC;IAC/C;EACF,CAAC,EAAE,CAACjF,aAAa,EAAExB,WAAW,EAAEqB,mBAAmB,CAAC,CAAC;EAErD,SAASqF,uBAAuBA,CAAA,EAAG;IACjCnF,WAAW,CAAC,CAACD,QAAQ,CAAC;EACxB;EAEA,SAASqF,4BAA4BA,CAAA,EAAG;IACtClF,gBAAgB,CAAC,CAACD,aAAa,CAAC;EAClC;EAEAqB,OAAO,CAACC,GAAG,CAAC1B,gBAAgB,CAAC;EAC7B,oBACElC,OAAA,CAACf,kBAAkB,CAACyI,QAAQ;IAAC7B,KAAK,EAAE1F,WAAY;IAAAwH,QAAA,eAC9C3H,OAAA;MAAK4H,SAAS,EAAC,MAAM;MAAAD,QAAA,eACnB3H,OAAA;QAAK4H,SAAS,EAAC,MAAM;QAAAD,QAAA,GAClB1E,gBAAgB,CAACoC,QAAQ,CAACrC,QAAQ,CAAC6E,QAAQ,CAAC,gBAC3C7H,OAAA,CAACd,MAAM;UAACoB,QAAQ,EAAEA;QAAS;UAAAwH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,GAE9B,EACD,eACDjI,OAAA,CAACnB,MAAM;UAAA8I,QAAA,gBACL3H,OAAA,CAAClB,KAAK;YACJoJ,IAAI,EAAC,SAAS;YACdC,OAAO,eACLnI,OAAA,CAACb,QAAQ;cACP+E,gBAAgB,EAAEA,gBAAiB;cACnCtC,YAAY,EAAEA;YAAa;cAAAkG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC5B;UACF;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,eACFjI,OAAA,CAAClB,KAAK;YACJoJ,IAAI,EAAC,SAAS;YACdC,OAAO,eACLnI,OAAA,CAACZ,KAAK;cAACoF,WAAW,EAAEA,WAAY;cAAC5C,YAAY,EAAEA;YAAa;cAAAkG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAC/D;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,eACFjI,OAAA,CAAClB,KAAK;YAACoJ,IAAI,EAAC,GAAG;YAACC,OAAO,eAAEnI,OAAA,CAACV,IAAI;cAAAwI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACrCjI,OAAA,CAAClB,KAAK;YACJoJ,IAAI,EAAC,UAAU;YACfC,OAAO,eACLnI,OAAA,CAACF,cAAc;cACbqI,OAAO,EAAE9I,OAAQ;cACjB+I,SAAS,EAAEzD,YAAa;cACxB0D,YAAY,EAAExD,gBAAiB;cAC/BjD,YAAY,EAAEA,YAAa;cAC3BtB,QAAQ,EAAEA,QAAS;cACnBwB,cAAc,EAAEA,cAAe;cAC/BgB,QAAQ,EAAEA;YAAS;cAAAgF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACpB;UACF;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,eACFjI,OAAA,CAAClB,KAAK;YACJoJ,IAAI,EAAC,SAAS;YACdC,OAAO,eACLnI,OAAA,CAACF,cAAc;cACbqI,OAAO,EAAE5I,MAAO;cAChBqB,MAAM,EAAEwB,QAAQ,GAAGJ,WAAW,GAAGhB,WAAY;cAC7C+E,kBAAkB,EAAEA,kBAAmB;cACvC7E,gBAAgB,EAAEA,gBAAiB;cACnCoH,cAAc,EAAE5C,kBAAmB;cACnC6C,eAAe,EAAErC,SAAU;cAC3BpF,WAAW,EAAEA,WAAY;cACzB8B,WAAW,EAAEA,WAAY;cACzBR,QAAQ,EAAEA,QAAS;cACnBoF,uBAAuB,EAAEA,uBAAwB;cACjDhF,QAAQ,EAAEA,QAAS;cACnBlC,QAAQ,EAAEA,QAAS;cACnBkB,UAAU,EAAEA,UAAW;cACvBgH,iBAAiB,EAAEvB;YAAsB;cAAAa,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC1C;UACF;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,eACFjI,OAAA,CAAClB,KAAK;YACJoJ,IAAI,EAAC,eAAe;YACpBC,OAAO,eACLnI,OAAA,CAACF,cAAc;cACbqI,OAAO,EAAE3I,WAAY;cACrBoB,MAAM,EACJc,eAAe,GACXJ,gBAAgB,GAChBgB,aAAa,GACbJ,gBAAgB,GAChBpB,WACL;cACD0H,iBAAiB,EAAEvB,qBAAsB;cACzCnG,WAAW,EAAEA,WAAY;cACzBiF,kBAAkB,EAAEE,uBAAwB;cAC5C/E,gBAAgB,EAAEE,qBAAsB;cACxCkH,cAAc,EAAExC,uBAAwB;cACxC9E,WAAW,EAAEM,gBAAiB;cAC9BhB,QAAQ,EAAEA,QAAS;cACnBkB,UAAU,EAAEE,eAAgB;cAC5Bc,QAAQ,EAAEE,aAAc;cACxBN,QAAQ,EAAEE,aAAc;cACxBkF,uBAAuB,EAAEC;YAA6B;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvD;UACF;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,eACFjI,OAAA,CAAClB,KAAK;YAACoJ,IAAI,EAAC,GAAG;YAACC,OAAO,eAAEnI,OAAA,CAACP,QAAQ;cAAAqI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACqB,CAAC;AAElC;AAAC/H,EAAA,CAxYQD,GAAG;EAAA,QAwCOjB,WAAW,EAGXD,WAAW;AAAA;AAAA0J,EAAA,GA3CrBxI,GAAG;AA0YZ,eAAeA,GAAG;AAAC,IAAAwI,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}