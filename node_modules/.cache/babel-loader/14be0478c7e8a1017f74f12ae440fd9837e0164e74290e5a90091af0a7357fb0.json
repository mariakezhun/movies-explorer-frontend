{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0411\\u041E\\u0413 \\u041A\\u041E\\u041C\\u041F\\u0410\\\\Desktop\\\\M\\\\dev\\\\movies-explorer-frontend\\\\src\\\\components\\\\MoviesCardList\\\\MoviesCardList.js\",\n  _s = $RefreshSig$();\nimport './MoviesCardList.css';\nimport React from 'react';\nimport MoviesCard from '../MoviesCard/MoviesCard';\nimport { useMediaQuery } from '../../hooks/useMediaQuery';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LG_ROW_CARD_COUNT = 4;\nconst MD_ROW_CARD_COUNT = 3;\nconst SM_ROW_CARD_COUNT = 2;\nconst LG_INITIAL_CARD_COUNT = 12;\nconst MD_INITIAL_CARD_COUNT = 9;\nconst SM_INITIAL_CARD_COUNT = 6;\nfunction MoviesCardList(props) {\n  _s();\n  const [cards, setCards] = React.useState(null);\n  const isDesktop = useMediaQuery('(min-width: 1280px)');\n  const isTablet = useMediaQuery('(min-width: 768px)');\n  const cardColumnCount = isDesktop ? LG_ROW_CARD_COUNT : isTablet ? MD_ROW_CARD_COUNT : SM_ROW_CARD_COUNT;\n  const initialCardCount = isDesktop ? LG_INITIAL_CARD_COUNT : isTablet ? MD_INITIAL_CARD_COUNT : SM_INITIAL_CARD_COUNT;\n  const [visibleCardCount, setVisibleCardCount] = React.useState(initialCardCount);\n  const roundedVisibleCardCount = Math.floor(visibleCardCount / cardColumnCount) * cardColumnCount;\n  React.useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/posts').then(response => response.json()).then(card => setCards(card));\n  }, []);\n  const handleClick = () => {\n    calculateCardCount();\n  };\n  const calculateCardCount = () => {\n    if (isDesktop) {\n      return setVisibleCardCount(visibleCardCount + LG_ROW_CARD_COUNT);\n    }\n    if (isTablet) {\n      return setVisibleCardCount(visibleCardCount + MD_ROW_CARD_COUNT);\n    }\n    setVisibleCardCount(visibleCardCount + SM_ROW_CARD_COUNT);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"movies-card-list\",\n    children: props.movies.map(movie => /*#__PURE__*/_jsxDEV(MoviesCard, {\n      movie: movie,\n      onMovieCardSave: props.onMovieCardSave,\n      onMovieCardDelete: props.onMovieCardDelete,\n      savedMovies: props.savedMovies\n    }, movie.movieId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(MoviesCardList, \"WUHWSaTXdK5dSeTx2zbcBdQuvuk=\", false, function () {\n  return [useMediaQuery, useMediaQuery];\n});\n_c = MoviesCardList;\nexport default MoviesCardList;\nvar _c;\n$RefreshReg$(_c, \"MoviesCardList\");","map":{"version":3,"names":["React","MoviesCard","useMediaQuery","jsxDEV","_jsxDEV","LG_ROW_CARD_COUNT","MD_ROW_CARD_COUNT","SM_ROW_CARD_COUNT","LG_INITIAL_CARD_COUNT","MD_INITIAL_CARD_COUNT","SM_INITIAL_CARD_COUNT","MoviesCardList","props","_s","cards","setCards","useState","isDesktop","isTablet","cardColumnCount","initialCardCount","visibleCardCount","setVisibleCardCount","roundedVisibleCardCount","Math","floor","useEffect","fetch","then","response","json","card","handleClick","calculateCardCount","className","children","movies","map","movie","onMovieCardSave","onMovieCardDelete","savedMovies","movieId","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/БОГ КОМПА/Desktop/M/dev/movies-explorer-frontend/src/components/MoviesCardList/MoviesCardList.js"],"sourcesContent":["import './MoviesCardList.css';\r\nimport React from 'react';\r\nimport MoviesCard from '../MoviesCard/MoviesCard';\r\nimport { useMediaQuery } from '../../hooks/useMediaQuery';\r\n\r\nconst LG_ROW_CARD_COUNT = 4;\r\nconst MD_ROW_CARD_COUNT = 3;\r\nconst SM_ROW_CARD_COUNT = 2;\r\n\r\nconst LG_INITIAL_CARD_COUNT = 12;\r\nconst MD_INITIAL_CARD_COUNT = 9;\r\nconst SM_INITIAL_CARD_COUNT = 6;\r\n\r\nfunction MoviesCardList(props) {\r\n\r\n  const [cards, setCards] = React.useState(null);\r\n\r\n  const isDesktop = useMediaQuery('(min-width: 1280px)');\r\n  const isTablet = useMediaQuery('(min-width: 768px)');\r\n\r\n  const cardColumnCount = isDesktop\r\n    ? LG_ROW_CARD_COUNT\r\n    : isTablet\r\n    ? MD_ROW_CARD_COUNT\r\n    : SM_ROW_CARD_COUNT;\r\n\r\n  const initialCardCount = isDesktop\r\n    ? LG_INITIAL_CARD_COUNT\r\n    : isTablet\r\n    ? MD_INITIAL_CARD_COUNT\r\n    : SM_INITIAL_CARD_COUNT;\r\n\r\n  const [visibleCardCount, setVisibleCardCount] =\r\n    React.useState(initialCardCount);\r\n\r\n  const roundedVisibleCardCount =\r\n    Math.floor(visibleCardCount / cardColumnCount) * cardColumnCount;\r\n\r\n  React.useEffect(() => {\r\n    fetch('https://jsonplaceholder.typicode.com/posts')\r\n      .then((response) => response.json())\r\n      .then((card) => setCards(card));\r\n  }, []);\r\n\r\n  const handleClick = () => {\r\n    calculateCardCount();\r\n  };\r\n\r\n  const calculateCardCount = () => {\r\n    if (isDesktop) {\r\n      return setVisibleCardCount(visibleCardCount + LG_ROW_CARD_COUNT);\r\n    }\r\n\r\n    if (isTablet) {\r\n      return setVisibleCardCount(visibleCardCount + MD_ROW_CARD_COUNT);\r\n    }\r\n\r\n    setVisibleCardCount(visibleCardCount + SM_ROW_CARD_COUNT);\r\n  };\r\n\r\n\r\n  return (\r\n    <section className='movies-card-list'>\r\n      {props.movies.map((movie) => (\r\n        <MoviesCard\r\n          key={movie.movieId}\r\n          movie={movie}\r\n          onMovieCardSave={props.onMovieCardSave}\r\n          onMovieCardDelete={props.onMovieCardDelete}\r\n          savedMovies={props.savedMovies}\r\n        />\r\n      ))}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default MoviesCardList;\r\n"],"mappings":";;AAAA,OAAO,sBAAsB;AAC7B,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,aAAa,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,iBAAiB,GAAG,CAAC;AAC3B,MAAMC,iBAAiB,GAAG,CAAC;AAC3B,MAAMC,iBAAiB,GAAG,CAAC;AAE3B,MAAMC,qBAAqB,GAAG,EAAE;AAChC,MAAMC,qBAAqB,GAAG,CAAC;AAC/B,MAAMC,qBAAqB,GAAG,CAAC;AAE/B,SAASC,cAAcA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAE7B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGf,KAAK,CAACgB,QAAQ,CAAC,IAAI,CAAC;EAE9C,MAAMC,SAAS,GAAGf,aAAa,CAAC,qBAAqB,CAAC;EACtD,MAAMgB,QAAQ,GAAGhB,aAAa,CAAC,oBAAoB,CAAC;EAEpD,MAAMiB,eAAe,GAAGF,SAAS,GAC7BZ,iBAAiB,GACjBa,QAAQ,GACRZ,iBAAiB,GACjBC,iBAAiB;EAErB,MAAMa,gBAAgB,GAAGH,SAAS,GAC9BT,qBAAqB,GACrBU,QAAQ,GACRT,qBAAqB,GACrBC,qBAAqB;EAEzB,MAAM,CAACW,gBAAgB,EAAEC,mBAAmB,CAAC,GAC3CtB,KAAK,CAACgB,QAAQ,CAACI,gBAAgB,CAAC;EAElC,MAAMG,uBAAuB,GAC3BC,IAAI,CAACC,KAAK,CAACJ,gBAAgB,GAAGF,eAAe,CAAC,GAAGA,eAAe;EAElEnB,KAAK,CAAC0B,SAAS,CAAC,MAAM;IACpBC,KAAK,CAAC,4CAA4C,CAAC,CAChDC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKhB,QAAQ,CAACgB,IAAI,CAAC,CAAC;EACnC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxBC,kBAAkB,CAAC,CAAC;EACtB,CAAC;EAED,MAAMA,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,IAAIhB,SAAS,EAAE;MACb,OAAOK,mBAAmB,CAACD,gBAAgB,GAAGhB,iBAAiB,CAAC;IAClE;IAEA,IAAIa,QAAQ,EAAE;MACZ,OAAOI,mBAAmB,CAACD,gBAAgB,GAAGf,iBAAiB,CAAC;IAClE;IAEAgB,mBAAmB,CAACD,gBAAgB,GAAGd,iBAAiB,CAAC;EAC3D,CAAC;EAGD,oBACEH,OAAA;IAAS8B,SAAS,EAAC,kBAAkB;IAAAC,QAAA,EAClCvB,KAAK,CAACwB,MAAM,CAACC,GAAG,CAAEC,KAAK,iBACtBlC,OAAA,CAACH,UAAU;MAETqC,KAAK,EAAEA,KAAM;MACbC,eAAe,EAAE3B,KAAK,CAAC2B,eAAgB;MACvCC,iBAAiB,EAAE5B,KAAK,CAAC4B,iBAAkB;MAC3CC,WAAW,EAAE7B,KAAK,CAAC6B;IAAY,GAJ1BH,KAAK,CAACI,OAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKnB,CACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEd;AAACjC,EAAA,CA7DQF,cAAc;EAAA,QAIHT,aAAa,EACdA,aAAa;AAAA;AAAA6C,EAAA,GALvBpC,cAAc;AA+DvB,eAAeA,cAAc;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}