{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0411\\u041E\\u0413 \\u041A\\u041E\\u041C\\u041F\\u0410\\\\Desktop\\\\M\\\\dev\\\\movies-explorer-frontend\\\\src\\\\components\\\\MoviesCardList\\\\MoviesCardList.js\",\n  _s = $RefreshSig$();\nimport './MoviesCardList.css';\nimport React from 'react';\nimport MoviesCard from '../MoviesCard/MoviesCard';\nimport { useMediaQuery } from '../../hooks/useMediaQuery';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LG_ROW_CARD_COUNT = 4;\nconst MD_ROW_CARD_COUNT = 3;\nconst SM_ROW_CARD_COUNT = 2;\nconst LG_INITIAL_CARD_COUNT = 12;\nconst MD_INITIAL_CARD_COUNT = 9;\nconst SM_INITIAL_CARD_COUNT = 6;\nfunction MoviesCardList(props) {\n  _s();\n  var _props$movies;\n  const isDesktop = useMediaQuery('(min-width: 1280px)');\n  const isTablet = useMediaQuery('(min-width: 768px)');\n  const cardColumnCount = isDesktop ? LG_ROW_CARD_COUNT : isTablet ? MD_ROW_CARD_COUNT : SM_ROW_CARD_COUNT;\n  const initialCardCount = isDesktop ? LG_INITIAL_CARD_COUNT : isTablet ? MD_INITIAL_CARD_COUNT : SM_INITIAL_CARD_COUNT;\n  const [visibleCardCount, setVisibleCardCount] = React.useState(initialCardCount);\n  const roundedVisibleCardCount = Math.floor(visibleCardCount / cardColumnCount) * cardColumnCount;\n  const handleClick = () => {\n    calculateCardCount();\n  };\n  const calculateCardCount = () => {\n    if (isDesktop) {\n      return setVisibleCardCount(visibleCardCount + LG_ROW_CARD_COUNT);\n    }\n    if (isTablet) {\n      return setVisibleCardCount(visibleCardCount + MD_ROW_CARD_COUNT);\n    }\n    setVisibleCardCount(visibleCardCount + SM_ROW_CARD_COUNT);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"movies-card-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movies-card-list__grid\",\n      children: (_props$movies = props.movies) === null || _props$movies === void 0 ? void 0 : _props$movies.slice(0, roundedVisibleCardCount).map(movie => /*#__PURE__*/_jsxDEV(MoviesCard, {\n        movie: movie,\n        onMovieCardSave: props.onMovieCardSave,\n        onMovieCardDelete: props.onMovieCardDelete,\n        savedMovies: props.savedMovies\n      }, movie.movieId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movies-card-list__button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"movies-card-list__more-button\",\n        onClick: handleClick,\n        children: \"\\u0415\\u0449\\u0451\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(MoviesCardList, \"MDRV+LOh3NpvXTCM0IX73LSWf/8=\", false, function () {\n  return [useMediaQuery, useMediaQuery];\n});\n_c = MoviesCardList;\nexport default MoviesCardList;\nvar _c;\n$RefreshReg$(_c, \"MoviesCardList\");","map":{"version":3,"names":["React","MoviesCard","useMediaQuery","jsxDEV","_jsxDEV","LG_ROW_CARD_COUNT","MD_ROW_CARD_COUNT","SM_ROW_CARD_COUNT","LG_INITIAL_CARD_COUNT","MD_INITIAL_CARD_COUNT","SM_INITIAL_CARD_COUNT","MoviesCardList","props","_s","_props$movies","isDesktop","isTablet","cardColumnCount","initialCardCount","visibleCardCount","setVisibleCardCount","useState","roundedVisibleCardCount","Math","floor","handleClick","calculateCardCount","className","children","movies","slice","map","movie","onMovieCardSave","onMovieCardDelete","savedMovies","movieId","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/БОГ КОМПА/Desktop/M/dev/movies-explorer-frontend/src/components/MoviesCardList/MoviesCardList.js"],"sourcesContent":["import './MoviesCardList.css';\r\nimport React from 'react';\r\nimport MoviesCard from '../MoviesCard/MoviesCard';\r\nimport { useMediaQuery } from '../../hooks/useMediaQuery';\r\n\r\nconst LG_ROW_CARD_COUNT = 4;\r\nconst MD_ROW_CARD_COUNT = 3;\r\nconst SM_ROW_CARD_COUNT = 2;\r\n\r\nconst LG_INITIAL_CARD_COUNT = 12;\r\nconst MD_INITIAL_CARD_COUNT = 9;\r\nconst SM_INITIAL_CARD_COUNT = 6;\r\n\r\nfunction MoviesCardList(props) {\r\n  const isDesktop = useMediaQuery('(min-width: 1280px)');\r\n  const isTablet = useMediaQuery('(min-width: 768px)');\r\n\r\n  const cardColumnCount = isDesktop\r\n    ? LG_ROW_CARD_COUNT\r\n    : isTablet\r\n    ? MD_ROW_CARD_COUNT\r\n    : SM_ROW_CARD_COUNT;\r\n\r\n  const initialCardCount = isDesktop\r\n    ? LG_INITIAL_CARD_COUNT\r\n    : isTablet\r\n    ? MD_INITIAL_CARD_COUNT\r\n    : SM_INITIAL_CARD_COUNT;\r\n\r\n  const [visibleCardCount, setVisibleCardCount] =\r\n    React.useState(initialCardCount);\r\n\r\n  const roundedVisibleCardCount =\r\n    Math.floor(visibleCardCount / cardColumnCount) * cardColumnCount;\r\n\r\n  const handleClick = () => {\r\n    calculateCardCount();\r\n  };\r\n\r\n  const calculateCardCount = () => {\r\n    if (isDesktop) {\r\n      return setVisibleCardCount(visibleCardCount + LG_ROW_CARD_COUNT);\r\n    }\r\n\r\n    if (isTablet) {\r\n      return setVisibleCardCount(visibleCardCount + MD_ROW_CARD_COUNT);\r\n    }\r\n\r\n    setVisibleCardCount(visibleCardCount + SM_ROW_CARD_COUNT);\r\n  };\r\n\r\n  return (\r\n    <section className='movies-card-list'>\r\n      <div className='movies-card-list__grid'>\r\n        {props.movies?.slice(0, roundedVisibleCardCount).map((movie) => (\r\n          <MoviesCard\r\n            key={movie.movieId}\r\n            movie={movie}\r\n            onMovieCardSave={props.onMovieCardSave}\r\n            onMovieCardDelete={props.onMovieCardDelete}\r\n            savedMovies={props.savedMovies}\r\n          />\r\n        ))}\r\n      </div>\r\n      <div className='movies-card-list__button-container'>\r\n        <button className='movies-card-list__more-button' onClick={handleClick}>\r\n          Ещё\r\n        </button>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default MoviesCardList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}