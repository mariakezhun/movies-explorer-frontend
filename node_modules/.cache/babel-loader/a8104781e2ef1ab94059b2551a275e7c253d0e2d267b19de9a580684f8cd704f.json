{"ast":null,"code":"class MainApi {\n  constructor({\n    BASE_URL\n  }) {\n    this._BASE_URL = BASE_URL;\n  }\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(res.status);\n  }\n  register(data) {\n    return fetch(`${this._BASE_URL}/signup`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: data.name,\n        email: data.email,\n        password: data.password\n      })\n    }).then(this._checkResponse);\n  }\n  authorize(data) {\n    return fetch(`${this._BASE_URL}/signin`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: data.email,\n        password: data.password\n      })\n    }).then(this._checkResponse);\n  }\n  checkToken() {\n    const token = localStorage.getItem('token');\n    return fetch(`${this._BASE_URL}/users/me`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      }\n    }).then(this._checkResponse);\n  }\n  getUserInfo() {\n    const token = localStorage.getItem('token');\n    return fetch(`${this._BASE_URL}/users/me`, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      }\n    }).then(this._checkResponse);\n  }\n  addUserInfo({\n    name,\n    email\n  }) {\n    const token = localStorage.getItem('token');\n    return fetch(`${this._BASE_URL}/users/me`, {\n      method: 'PATCH',\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name,\n        email\n      })\n    }).then(this._checkResponse);\n  }\n  saveMovie({\n    country,\n    director,\n    duration,\n    year,\n    description,\n    image,\n    trailerLink,\n    thumbnail,\n    movieId,\n    nameRU,\n    nameEN\n  }) {\n    const token = localStorage.getItem('token');\n    return fetch(`${this._BASE_URL}/movies`, {\n      method: 'POST',\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        country,\n        director,\n        duration,\n        year,\n        description,\n        image,\n        trailerLink,\n        thumbnail,\n        movieId,\n        nameRU,\n        nameEN\n      })\n    }).then(this._checkResponse);\n  }\n  getMovie() {\n    const token = localStorage.getItem('token');\n    return fetch(`${this._BASE_URL}/movies`, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      }\n    }).then(this._checkResponse);\n  }\n  deleteMovie(movieId) {\n    const token = localStorage.getItem('token');\n    return fetch(`${this._BASE_URL}/movies/${movieId}`, {\n      method: 'DELETE',\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      }\n    }).then(this._checkResponse);\n  }\n}\nexport const mainApi = new MainApi({\n  // BASE_URL: 'https://api.mkezhun.nomoredomains.xyz',\n  BASE_URL: 'http://localhost:3000'\n});","map":{"version":3,"names":["MainApi","constructor","BASE_URL","_BASE_URL","_checkResponse","res","ok","json","Promise","reject","status","register","data","fetch","method","headers","body","JSON","stringify","name","email","password","then","authorize","checkToken","token","localStorage","getItem","Authorization","getUserInfo","addUserInfo","saveMovie","country","director","duration","year","description","image","trailerLink","thumbnail","movieId","nameRU","nameEN","getMovie","deleteMovie","mainApi"],"sources":["C:/Users/БОГ КОМПА/Desktop/M/dev/movies-explorer-frontend/src/utils/MainApi.js"],"sourcesContent":["class MainApi {\r\n  constructor({ BASE_URL }) {\r\n    this._BASE_URL = BASE_URL;\r\n  }\r\n\r\n  _checkResponse(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(res.status);\r\n  }\r\n\r\n  register(data) {\r\n    return fetch(`${this._BASE_URL}/signup`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        name: data.name,\r\n        email: data.email,\r\n        password: data.password,\r\n      }),\r\n    }).then(this._checkResponse);\r\n  }\r\n\r\n  authorize(data) {\r\n    return fetch(`${this._BASE_URL}/signin`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ email: data.email, password: data.password }),\r\n    }).then(this._checkResponse);\r\n  }\r\n  checkToken() {\r\n    const token = localStorage.getItem('token');\r\n\r\n    return fetch(`${this._BASE_URL}/users/me`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    }).then(this._checkResponse);\r\n  }\r\n\r\n  getUserInfo() {\r\n    const token = localStorage.getItem('token');\r\n    return fetch(`${this._BASE_URL}/users/me`, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }).then(this._checkResponse);\r\n  }\r\n\r\n  addUserInfo({ name, email }) {\r\n    const token = localStorage.getItem('token');\r\n\r\n    return fetch(`${this._BASE_URL}/users/me`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ name, email }),\r\n    }).then(this._checkResponse);\r\n  }\r\n\r\n  saveMovie({\r\n    country,\r\n    director,\r\n    duration,\r\n    year,\r\n    description,\r\n    image,\r\n    trailerLink,\r\n    thumbnail,\r\n    movieId,\r\n    nameRU,\r\n    nameEN,\r\n  }) {\r\n    const token = localStorage.getItem('token');\r\n\r\n    return fetch(`${this._BASE_URL}/movies`, {\r\n      method: 'POST',\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        country,\r\n        director,\r\n        duration,\r\n        year,\r\n        description,\r\n        image,\r\n        trailerLink,\r\n        thumbnail,\r\n        movieId,\r\n        nameRU,\r\n        nameEN,\r\n      }),\r\n    }).then(this._checkResponse);\r\n  }\r\n\r\n  getMovie() {\r\n    const token = localStorage.getItem('token');\r\n\r\n    return fetch(`${this._BASE_URL}/movies`, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }).then(this._checkResponse);\r\n  }\r\n\r\n  deleteMovie(movieId) {\r\n    const token = localStorage.getItem('token');\r\n\r\n    return fetch(`${this._BASE_URL}/movies/${movieId}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }).then(this._checkResponse);\r\n  }\r\n}\r\n\r\nexport const mainApi = new MainApi({\r\n  // BASE_URL: 'https://api.mkezhun.nomoredomains.xyz',\r\n  BASE_URL: 'http://localhost:3000',\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}